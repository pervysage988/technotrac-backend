"""add otp_codes table

Revision ID: 84aa5e338c55
Revises: 4d2dd8aa3428
Create Date: 2025-09-01 07:35:04.008815

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84aa5e338c55'
down_revision: Union[str, Sequence[str], None] = '4d2dd8aa3428'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('availabilities', sa.Column('start_ts', sa.DateTime(timezone=True), nullable=False))
    op.add_column('availabilities', sa.Column('end_ts', sa.DateTime(timezone=True), nullable=False))
    op.create_index(op.f('ix_availabilities_equipment_id'), 'availabilities', ['equipment_id'], unique=False)
    op.create_index('ix_availability_equipment_id', 'availabilities', ['equipment_id'], unique=False)
    op.drop_column('availabilities', 'end_time')
    op.drop_column('availabilities', 'start_time')
    op.create_index('ix_booking_equipment', 'bookings', ['equipment_id'], unique=False)
    op.create_index('ix_booking_renter', 'bookings', ['renter_id'], unique=False)
    op.drop_constraint(op.f('bookings_equipment_id_fkey'), 'bookings', type_='foreignkey')
    op.drop_constraint(op.f('bookings_renter_id_fkey'), 'bookings', type_='foreignkey')
    op.create_foreign_key(None, 'bookings', 'equipment', ['equipment_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'bookings', 'users', ['renter_id'], ['id'], ondelete='CASCADE')
    op.alter_column('equipment', 'status',
               existing_type=postgresql.ENUM('DRAFT', 'PENDING_REVIEW', 'APPROVED', 'REJECTED', 'BLOCKED', name='equipmentstatus'),
               nullable=False)
    op.create_index('ix_equipment_lat_lon', 'equipment', ['lat', 'lon'], unique=False)
    op.create_index('ix_equipment_type_daily_rate', 'equipment', ['type', 'daily_rate'], unique=False)
    op.alter_column('equipment_photos', 'url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('ratings', 'booking_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('ratings', 'by_user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('ratings', 'for_user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('ratings', 'stars',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False)
    op.create_index('ix_rating_for_user', 'ratings', ['for_user_id'], unique=False)
    op.drop_constraint(op.f('ratings_by_user_id_fkey'), 'ratings', type_='foreignkey')
    op.drop_constraint(op.f('ratings_for_user_id_fkey'), 'ratings', type_='foreignkey')
    op.drop_constraint(op.f('ratings_booking_id_fkey'), 'ratings', type_='foreignkey')
    op.create_foreign_key(None, 'ratings', 'users', ['for_user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'ratings', 'users', ['by_user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'ratings', 'bookings', ['booking_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'ratings', type_='foreignkey')
    op.drop_constraint(None, 'ratings', type_='foreignkey')
    op.drop_constraint(None, 'ratings', type_='foreignkey')
    op.create_foreign_key(op.f('ratings_booking_id_fkey'), 'ratings', 'bookings', ['booking_id'], ['id'])
    op.create_foreign_key(op.f('ratings_for_user_id_fkey'), 'ratings', 'users', ['for_user_id'], ['id'])
    op.create_foreign_key(op.f('ratings_by_user_id_fkey'), 'ratings', 'users', ['by_user_id'], ['id'])
    op.drop_index('ix_rating_for_user', table_name='ratings')
    op.alter_column('ratings', 'stars',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('ratings', 'for_user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('ratings', 'by_user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('ratings', 'booking_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('equipment_photos', 'url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index('ix_equipment_type_daily_rate', table_name='equipment')
    op.drop_index('ix_equipment_lat_lon', table_name='equipment')
    op.alter_column('equipment', 'status',
               existing_type=postgresql.ENUM('DRAFT', 'PENDING_REVIEW', 'APPROVED', 'REJECTED', 'BLOCKED', name='equipmentstatus'),
               nullable=True)
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.create_foreign_key(op.f('bookings_renter_id_fkey'), 'bookings', 'users', ['renter_id'], ['id'])
    op.create_foreign_key(op.f('bookings_equipment_id_fkey'), 'bookings', 'equipment', ['equipment_id'], ['id'])
    op.drop_index('ix_booking_renter', table_name='bookings')
    op.drop_index('ix_booking_equipment', table_name='bookings')
    op.add_column('availabilities', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('availabilities', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index('ix_availability_equipment_id', table_name='availabilities')
    op.drop_index(op.f('ix_availabilities_equipment_id'), table_name='availabilities')
    op.drop_column('availabilities', 'end_ts')
    op.drop_column('availabilities', 'start_ts')
    # ### end Alembic commands ###
